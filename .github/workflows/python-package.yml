name: Build & Test

on:
  push:
    branches: [ "develop" , "master"]
  pull_request:
    branches: [ "develop", "master"]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.2.2
        virtualenvs-in-project: true
        installer-parallel: true

    # load cached venv if cache exists
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    # install dependencies if cache does not exist
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    # install your root project, if required
    - name: Install project
      run: poetry install --no-interaction

    # this is required for unit tests
    - name: Install asyncapi-cli
      run: npm install -g @asyncapi/cli

    - name: tmp test
      run: asyncapi validate ./examples/downloader.yml

    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests -v --cov=./src/sio_asyncapi --cov-report=xml:./coverage.xml --cov-report term-missing
        coverage report

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
